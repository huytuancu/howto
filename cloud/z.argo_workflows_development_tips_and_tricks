# official document | do not delete this link
https://argo-workflows.readthedocs.io/en/latest/walk-through/hello-world/

# get output parameters from other template with in dag: > tasks:

eg:
- name: my-output-value-needed
  value: "{{tasks.<other template name>.outputs.parameters.<your expected output parameter> }}"

# withItems --> passing array directly in a template/funcion
eg:
- name: Test-with-items
  templateRef:
    name: <workflow_template_name>
    template: <template_function>
  arguments:
    parameters:
      - name: parameter-1
        value: "{{item.parameter-1}}"
      - name: parameter-2
        value: "{{item.parameter-2}}"
  withItems:
      - { parameter-1 : 'xyz', parameter-2 : 'abc'}

# useful workflow name & unique id
{{workflow.name}} --> string generated from the workflow
{{workflow.uid}}  --> random unique string 

# how to define an array
- name: test-array
  value: ["item-0","item-2","item-3"]

# how to loop a function using an array defined above
- name: your-template-name
  templateRef:
    name: <argocd_app-template_name-version>
    template: your_template
  withParam: "{{workflow.parameters.test-array"
  arguments:
    parameters:
      - name: <input parameter 1>
        value: "{{item}}" # item from test-array
      - name: <input parameter 2>
        value: "..."

# define workflow template | think of it as template functions
kind: WorkflowTemplate

# argo workflow templates are written in helm > chart > templates and later on deployed on argo-cd server on a specific namespace
# other users (aka applications) need to deploy on the same name space in order to use/call it

# define main workflow
kind: Workflow

# volumes and mountpath
# volumes is used to define logical storage on a pod
# mountpath is used to define absolute path associated with logical volumes above

examples:

